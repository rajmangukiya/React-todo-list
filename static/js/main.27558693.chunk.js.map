{"version":3,"sources":["logo.svg","Components/InputButton.js","Components/Options.js","Components/Input.js","Components/Todo.js","Components/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["InputButton","state","useContext","UserContext","useState","Math","random","id","setId","onClick","setTodos","todos","complete","name","input","setInput","className","Options","onChange","e","setStatus","target","value","Input","type","Todo","props","todo","map","console","log","filter","Todos","newTodos","React","createContext","App","setNewTodos","status","useEffect","localStorage","getItem","setItem","JSON","stringify","dummy","parse","handleFilters","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27558693.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import userEvent from '@testing-library/user-event'\r\nimport React, { useContext, useState } from 'react'\r\nimport { UserContext } from '../App'\r\n\r\nfunction InputButton() {\r\n\r\n  const state = useContext(UserContext)\r\n  const [id, setId] = useState(Math.random())\r\n\r\n  const handleSubmitTodo = () => {\r\n    state.setTodos([...state.todos, {\r\n      id: id,\r\n      complete: false,\r\n      name: state.input\r\n    }])\r\n    state.setInput(\"\")\r\n    setId(Math.random())\r\n  }\r\n\r\n  return (\r\n    <button onClick={handleSubmitTodo} className=\"Button\">click</button>\r\n  )\r\n}\r\n\r\nexport default InputButton\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { UserContext } from '../App'\r\n\r\nfunction Options() {\r\n\r\n  const state = useContext(UserContext)\r\n\r\n  const handleStatus = (e) => {\r\n    state.setStatus(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <select onChange={handleStatus} className=\"Options\">\r\n      <option value=\"all\">all</option>\r\n      <option value=\"completed\">completed</option>\r\n      <option value=\"uncompleted\">un-completed</option>\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default Options\r\n","import React, { useContext } from 'react'\r\nimport { UserContext } from '../App'\r\nimport InputButton from './InputButton'\r\nimport Options from './Options'\r\n\r\nfunction Input() {\r\n\r\n  const state = useContext(UserContext)\r\n  \r\n  return (\r\n    <div className=\"Inputs\">\r\n      <input onChange={(e) => {state.setInput(e.target.value)}} type=\"text\" value={state.input} />\r\n      <InputButton />\r\n      <Options />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React, { useContext } from 'react'\r\nimport { UserContext } from '../App'\r\n\r\nfunction Todo(props) {\r\n\r\n  const state = useContext(UserContext)\r\n\r\n  const handleDeleteButton = () => {\r\n    console.log(\"delete\")\r\n    state.setTodos(state.todos.filter((todo) => {\r\n      return todo.id !== props.todo.id\r\n    }))\r\n  }\r\n\r\n  const handleDoneButton = () => {\r\n    state.setTodos(state.todos.map((todo) => {\r\n      if(todo.id == props.todo.id) {\r\n        return {\r\n          ...todo,\r\n          complete: !todo.complete\r\n        }\r\n      }\r\n      return {\r\n        ...todo\r\n      }\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className=\"Todo\" >\r\n      <div className={`TodoText ${props.todo.complete ? 'TodoTextDone' : ''}`}>{props.todo.name}</div>\r\n      <button onClick={handleDoneButton} className={`TodoUnCompleteButton ${props.todo.complete ? 'TodoCompleteButton' : ''}`} ></button>\r\n      <button onClick={handleDeleteButton} className=\"TodoDeleteButton\">\r\n      <div className=\"image\"></div>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Todo\r\n","import React, { useContext } from 'react'\r\nimport { UserContext } from '../App'\r\nimport Todo from './Todo'\r\n\r\nfunction Todos() {\r\n\r\n  const state = useContext(UserContext)\r\n\r\n  return (\r\n    <ul className=\"Todos\">\r\n      {\r\n        state.newTodos === null ? console.log(\"hbs\") : \r\n        state.newTodos.map((todo) => {\r\n          return <Todo todo={todo} key={todo.id} />\r\n        })\r\n      }\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Todos\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Input from './Components/Input';\nimport React, { useEffect, useState } from 'react';\nimport Todos from './Components/Todos';\n\nexport const UserContext = React.createContext()\n\nfunction App() {\n\n  const [input, setInput] = useState('')\n  const [todos, setTodos] = useState([])\n  const [newTodos, setNewTodos] = useState([])\n  const [status, setStatus] = useState('all')\n\n  useEffect(() => {\n    if(localStorage.getItem('todos') === '[]') {\n      localStorage.setItem('todos', JSON.stringify([]))\n    }\n    else {\n      let dummy = JSON.parse(localStorage.getItem('todos'))\n      setTodos(dummy)\n      console.log(\"running\")\n    }\n  }, [])\n\n  useEffect(() => {\n    handleFilters()\n    localStorage.setItem('todos', JSON.stringify(todos))\n  }, [todos, status])\n\n  const handleFilters = () => {\n    switch(status) {\n      case 'all':\n        setNewTodos(todos)\n        break\n      case 'completed':\n        setNewTodos(todos.filter((todo) => todo.complete))\n        break\n      case 'uncompleted':\n        setNewTodos(todos.filter((todo) => !todo.complete))\n        break\n      default:\n        setNewTodos(todos)\n        break\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Raj's List</h1>\n      <UserContext.Provider \n      value={{\n        input: input,\n        setInput: setInput,\n        todos: todos,\n        setTodos: setTodos,\n        newTodos: newTodos,\n        setNewTodos: setNewTodos,\n        status: status,\n        setStatus: setStatus\n      }}>\n        <Input />\n        <Todos />\n      </UserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}